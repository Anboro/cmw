{
  "$type": "Comindware.Platform.Contracts.UserCommandConfigurationModel, Comindware.Platform.Contracts",
  "GlobalAlias": {
    "$type": "Comindware.Platform.Contracts.GlobalAlias, Comindware.Platform.Contracts",
    "Type": "UserCommand",
    "Owner": "ShZ",
    "Alias": "SkriptNaAni"
  },
  "Name": "СкриптНаАни",
  "IsSystem": false,
  "IsDisabled": false,
  "IsPrepare": false,
  "SkipValidation": false,
  "Context": "Record",
  "Multiplicity": "OneByOne",
  "Kind": "Script",
  "ResultType": "DataChange",
  "ConfirmationModelConfiguration": {
    "$type": "Comindware.Platform.Contracts.UserCommandConfirmationModel, Comindware.Platform.Contracts",
    "Title": "Новая операция",
    "Text": "Подтвердить выполнение операции",
    "YesButtonText": "Выполнить",
    "NoButtonText": "Отмена",
    "Severity": "None"
  },
  "ScriptRule": {
    "$type": "Comindware.Platform.Contracts.UserCommandScriptRuleModel, Comindware.Platform.Contracts",
    "Type": "UserCommandScript",
    "Definition": {
      "$type": "Comindware.Platform.Contracts.CSharpRuleDefinitionModel, Comindware.Platform.Contracts",
      "EntryPoint": "Script",
      "Code": "using System; \nusing System.Collections.Generic;\nusing System.Linq;\nusing Comindware.Data.Entity;\nusing Comindware.TeamNetwork.Api.Data.UserCommands;\nusing Comindware.TeamNetwork.Api.Data;\n\nclass Script\n{\n    public static UserCommandResult Main(UserCommandContext userCommandContext, Comindware.Entities entities)\n    { \n        var currentObjectid = userCommandContext.ObjectIds[0];\n        var a = Api.Base.CommunicationChannelService.GetByAlias(\"TZ_09122020\").Password;\n\t\tvar ShzData = new Dictionary<string, object>();\n        ShzData.Add(\"op.58\", a); \n        Api.TeamNetwork.ObjectService.Edit(currentObjectid, ShzData);\n        // Put your code here\n\t\tvar result = new UserCommandResult\n\t\t{\n            Success = true,\n\t\t\tCommited = true,\n\t\t\tResultType = UserCommandResultType.Undefined        \n\t\t};\n\t\treturn result;\n    }\n}\n",
      "Type": "CSharpExpression"
    }
  },
  "RelatedEntityGlobalAlias": {
    "$type": "Comindware.Platform.Contracts.GlobalAlias, Comindware.Platform.Contracts",
    "Type": "Undefined"
  },
  "LockStateChangeType": "Undefined",
  "LockStateVisibilityType": "Undefined"
}